import { IFunctionData } from '../../types';

/**
 * 时间函数
 */
export const TimeFunctionData: IFunctionData[] = [
  {
    id: 'NOW',
    name: 'NOW',
    type: '时间函数',
    info: '<p>返回当前时间，格式为年-月-日 时-分-秒。</p><p>例1：NOW()</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'TIMEFORMAT',
    name: 'TIMEFORMAT',
    type: '时间函数',
    info: '<p>将时间戳转换为指定日期格式。</p><p>例1：TIMEFORMAT(&#39;2022-09-16 16:20:33&#39;,&#39;yyyy-MM-dd&#39;)</p><p><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'GETYEAR',
    name: 'GETYEAR',
    type: '时间函数',
    info: '<p>获取指定时间的年份。</p><p>例1：GETYEAR(&#39;2022-09-16 16:20:33&#39;)</p><p><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'GETMONTH',
    name: 'GETMONTH',
    type: '时间函数',
    info: '<p>获取指定时间的月份。</p><p>例1：GETMONTH(&#39;2022-09-16 16:20:33&#39;)</p><p><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'GETDATE',
    name: 'GETDATE',
    type: '时间函数',
    info: '<p>获取指定时间的天数，这个月的第几天。</p><p>例1：GETDATE(&#39;2022-09-16 16:20:33&#39;)</p><p><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'GETWEEKDAY',
    name: 'GETWEEKDAY',
    type: '时间函数',
    info: '<p>获取指定时间的星期几。</p><p>例1：GETWEEKDAY(&#39;2022-09-16 16:20:33&#39;)</p><p><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'COMPARETIME',
    name: 'COMPARETIME',
    type: '时间函数',
    info: '<p>比较两个时间的大小，<strong>日期参数1</strong>大于<strong>日期参数2</strong>返回 true，否则返回 false。</p><p>例1：COMPARETIME(&#39;2022-09-16 16:20:33&#39;,&#39;2022-09-12 19:20:33&#39;)</p><p><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'bool',
    param: false,
  },
  {
    id: 'TIMEBETWEEN',
    name: 'TIMEBETWEEN',
    type: '时间函数',
    info: '<p>返回两个日期之间相差的天、月、年、小时等。</p><p>第三个参数使用不同的参数返回同的相差类型：<br/>天（DAYS）、<br/>周（WEEKS）、<br/>月（MONTHS）、<br/>年（YEARS）、<br/>小时（HOURS）、<br/>分钟（MINUTES）、<br/>秒（SECONDS）。</p><p>例1：TIMEBETWEEN(&#39;2022-09-16 16:20:33&#39;,&#39;2022-09-12 19:20:33&#39;,&#39;DAYS&#39;)</p><p>结果：3<br/></p><p>例2：TIMEBETWEEN(&#39;2022-09-16 16:20:33&#39;,&#39;2022-09-12 19:20:33&#39;,&#39;HOURS&#39;)<br/>结果：93</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'number',
    param: false,
  },
  {
    id: 'GETCHINESEZODIAC',
    name: 'GETCHINESEZODIAC',
    type: '时间函数',
    info: '<p>根据身份证号自动计算生肖。</p><p>例如：GETCHINESEZODIAC(&#39;549874455212544412&#39;)。</p><p>注意：参数为字符串类型。</p><p><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'GETZODIAC',
    name: 'GETZODIAC',
    type: '时间函数',
    info: '<p>根据身份证号自动计算星座。</p><p>例如：GETZODIAC(&#39;549874455212544412&#39;)。</p><p>注意：参数为字符串类型</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'QUARTER',
    name: 'QUARTER',
    type: '时间函数',
    info: '<p>获取日期所在的季度。</p><p>例如：QUARTER(‘2022-09-15 12:34:23’)。</p><p>注意：返回的季度从1开始计数。</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'number',
    param: false,
  },
  {
    id: 'DAYOFFSET',
    name: 'DAYOFFSET',
    type: '时间函数',
    info: '<p>日期增加或减少指定天数。</p><p>例如：DAYOFFSET(‘2022-09-15 12:34:23’,20)。</p><p>注意：第二个参数为负数时未减少天数</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'COMPAREDATE',
    name: 'COMPAREDATE',
    type: '时间函数',
    info: '<p>比较两个日期的大小，<strong>日期参数1</strong>大于<strong>日期参数2</strong>返回 true，否则返回 false。</p><p>例1：COMPAREDATE(&#39;2022-09-16&#39;,&#39;2022-09-12&#39;)</p><p><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'bool',
    param: false,
  },
  {
    id: 'DATEFORMAT',
    name: 'DATEFORMAT',
    type: '时间函数',
    info: '<p>将日期转换为指定日期格式。</p><p>例1\ufffd\ufffd\ufffdDATEFORMAT(&#39;2022-09-16&#39;,&#39;yyyy-MM-dd HH:mm:ss&#39;)</p><p><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'DATEPARSE',
    name: 'DATEPARSE',
    type: '时间函数',
    info: '<p>自动识别时间格式，将日期转换为指定日期格式。<br/>例1：DATEPARSE(&quot;2022-09-05T03:21:23.825Z&quot;,&quot;yyyy-MMM-dd&quot;)</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'PARSETIMESTAMP',
    name: 'PARSETIMESTAMP',
    type: '时间函数',
    info: '<p>将时间戳转换为日期格式（yyyy-MM-dd HH:mm:ss）。<br/>例1：PARSETIMESTAMP(1675612800000)</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'AGEOFNOW',
    name: 'AGEOFNOW',
    type: '时间函数',
    info: '根据日期计算当前年龄',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'number',
    param: false,
  },
];
