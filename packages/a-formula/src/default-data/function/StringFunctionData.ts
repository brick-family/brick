import { IFunctionData } from '../../types';

/**
 * 字符串函数
 */
export const StringFunctionData: IFunctionData[] = [
  {
    id: 'CONTRACT',
    name: 'CONTRACT',
    type: '文字函数',
    info: '<p>这是一个文字函数，将多个文字组合起来，参数可使用多个</p><p>例如：CONTRACT(&quot;aa&quot;,&quot;bb&quot;,&quot;cc&quot;)</p><p>结果为： aabbcc</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'CONCATENAT',
    name: 'CONCATENAT',
    type: '文字函数',
    info: '<p>使用自定义连接符拼接多个字符串</p><p>例：CONCATENAT(&quot;-&quot;,&quot;aaa&quot;,&quot;bbb&quot;,&quot;ccc&quot;)<br/>注意：需要拼接的字符串至少为2个</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'LEFT',
    name: 'LEFT',
    type: '文字函数',
    info: '<p>从一个文本字符串的第一个字符开始返回指定个数的字符,如果文本长度小于自定字符个数，就将原始文本返回</p><p>例：LEFT(&quot;aaaaaaa&quot;,5)<br/><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'RIGHT',
    name: 'RIGHT',
    type: '文字函数',
    info: '<p>从一个文本字符串的最后一个字符开始返回指定个数的字符,如果文本长度小于自定字符个数，就将原始文本返回</p><p>例：RIGHT(&quot;aaaaaaa&quot;,5)<br/><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'LOWER',
    name: 'LOWER',
    type: '文字函数',
    info: '<p>将一个文本字符串中的所有大写字母转换为小写字母</p><p>例：LOWER(&quot;AAaaaa&quot;)<br/><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'UPPER',
    name: 'UPPER',
    type: '文字函数',
    info: '<p>将一个文本字符串中的所有小写字母转换为大写字母</p><p>例：UPPER(&quot;AAaaaa&quot;)<br/><br/></p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'REPLACE',
    name: 'REPLACE',
    type: '文字函数',
    info: '<p>替换参数1中的字符串，替换字符数为参数2，替换的内容为参数3。<br/>例1：REPLACE(&quot;aaabbbccc&quot;,&quot;ddd&quot;,&quot;bbb&quot;,)，<br/>结果为：aaadddccc</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'LEN',
    name: 'LEN',
    type: '文字函数',
    info: '<p>返回字符串中的字符个数</p><p>例：LEN(&quot;aaggsc&quot;)。</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'REPT',
    name: 'REPT',
    type: '文字函数',
    info: '<p>将文本重复指定次数</p><p>例：REPT(&quot;aaggsc&quot;,3)。</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'SEARCH',
    name: 'SEARCH',
    type: '文字函数',
    info: '<p>在第一个文本字符串中查找第二个文本字符串，并返回第一个文本字符串的起始位置的编号，该编号从第二个文本字符串的第一个字符算起。</p><p>例：SEARCH(&#39;vvsssddaaccaa&#39;,&quot;aa&quot;)</p><p>注意：返回 0 则表示未查找到。默认从第一个字符开始查找，如果需要从指定字符开始查找，填写第三个参数，表示从第几个字符开始查找。例如：SEARCH(&quot;aa&quot;,&#39;vvsssddaaccaa&#39;,5)</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
  {
    id: 'MID',
    name: 'MID',
    type: '文字函数',
    info: '<p>截取<strong>参数1</strong>字符串，从<strong>参数2</strong>[数值]开始截取，截取<strong>参数3</strong>[数值]个字符。</p><p>例：MID(&quot;vvsssddaaccaa&quot;,3,4)<br/>结果为：sssd</p>',
    enableCache: true,
    reqCont: 0,
    jvsParamType: 'text',
    param: false,
  },
];
